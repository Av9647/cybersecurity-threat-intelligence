#!/usr/bin/env python3
"""
Dump all vendor–product CVE lists as NDJSON, gzip them, and
stream-upload to S3 in one pass. Each line includes ingestion
timestamps.

Example line:
{"vendor":"sharp","product":"mx-m465n_firmware",
 "ingestionTimestamp":"2025-03-30T00:00:40.398831+00:00",
 "ingestionDate":"2025-03-30",
 "fkie_nvd":[…],"cvelistv5":[…]}
"""

import os
import sys
import json
import gzip
import datetime
import subprocess
from datetime import datetime, timezone
from pymongo import MongoClient

# CONFIG — adjust or export as env vars
S3_BUCKET = os.getenv("S3_BUCKET", "your-bucket-name")
S3_PREFIX = os.getenv("S3_PREFIX", "cve-dumps/")
AWS_CLI   = os.getenv("AWS_CLI", "aws")   # path to aws binary

# Build the S3 key with today’s date
today = datetime.now(timezone.utc).strftime("%Y%m%d")
s3_key = f"{S3_PREFIX}vendor_product_dump_{today}.ndjson.gz"
s3_uri = f"s3://{S3_BUCKET}/{s3_key}"

# 1) open awscli for streaming multipart upload
cmd = [
    AWS_CLI, "s3", "cp", "-", s3_uri,
    "--content-type", "application/x-ndjson",
    "--content-encoding", "gzip"
]
proc = subprocess.Popen(cmd, stdin=subprocess.PIPE)
if proc.stdin is None:
    print("Failed to open awscli stdin", file=sys.stderr)
    sys.exit(1)

# 2) connect to MongoDB
client = MongoClient(os.getenv("MONGO_URI", "mongodb://mongo:27017/"))
db     = client[os.getenv("DB_NAME", "cvedb")]

# 3) iterate & dump
with gzip.GzipFile(fileobj=proc.stdin, mode="wb") as gz:
    for doc in db.map_vendor_product_cvelistv5.find({}, {"_id":1}):
        vendor  = doc["_id"]["vendor"]
        product = doc["_id"]["product"]

        # fetch the two lists of CVE IDs
        nvd_ids = db.map_vendor_product_nvd.find_one({"_id":doc["_id"]})["cves"]
        cl_ids  = db.map_vendor_product_cvelistv5.find_one({"_id":doc["_id"]})["cves"]

        # load full CVE docs
        nvd_docs = list(db.cves.find({"id":{"$in": nvd_ids}}, {"_id":0}))
        cl_docs  = list(db.cvelistv5.find({"cveMetadata.cveId":{"$in":cl_ids}}, {"_id":0}))

        # generate timestamps
        now = datetime.datetime.now(datetime.timezone.utc)
        ingestion_ts = now.isoformat()          # e.g. "2025-03-30T00:00:40.398831+00:00"
        ingestion_date = now.date().isoformat() # e.g. "2025-03-30"

        # assemble and write one NDJSON line
        record = {
            "vendor":             vendor,
            "product":            product,
            "ingestionTimestamp": ingestion_ts,
            "ingestionDate":      ingestion_date,
            "fkie_nvd":           nvd_docs,
            "cvelistv5":          cl_docs
        }
        line = (json.dumps(record, ensure_ascii=False) + "\n").encode("utf-8")
        gz.write(line)

# 4) finish the upload
proc.stdin.close()
rc = proc.wait()
if rc != 0:
    print(f"aws s3 cp exited with code {rc}", file=sys.stderr)
    sys.exit(rc)

print(f"Successfully uploaded dump to {s3_uri}")
