#!/usr/bin/env python3
"""
Import the official CVE List V5 into MongoDB using batched upserts.
Usage (inside the cvelist_importer Docker image):
    python import_cvelistv5.py
"""
import os
import glob
import json
from pathlib import Path
from git import Repo
from pymongo import MongoClient, ReplaceOne
# --------------------------------------------------------------------------- #
# settings
REPO_URL   = "https://github.com/CVEProject/cvelistV5.git"
LOCAL_DIR  = Path("./cvelistV5")          # checked-out repo
DB_NAME    = "cvedb"
COLL_NAME  = "cvelistv5"
BATCH_SIZE = 1000                         # flush every 1k ops
MONGO_URI  = "mongodb://mongo:27017/"     # docker-compose hostname
# --------------------------------------------------------------------------- #
# 1) Clone or update the repo
if not LOCAL_DIR.is_dir():
    print("Cloning cvelistV5…")
    Repo.clone_from(REPO_URL, LOCAL_DIR)
else:
    print("Updating cvelistV5…")
    Repo(str(LOCAL_DIR)).remotes.origin.pull("--depth=1")

# --------------------------------------------------------------------------- #
# 2) Connect to Mongo
client = MongoClient(MONGO_URI)
coll   = client[DB_NAME][COLL_NAME]
# --------------------------------------------------------------------------- #
# 3) Upsert each CVE record in batches
pattern = LOCAL_DIR / "cves" / "**" / "CVE-*.json"
ops     = []
count   = 0
for path in glob.iglob(str(pattern), recursive=True):
    try:
        rec = json.load(open(path, "r"))
        cve_id = rec["cveMetadata"]["cveId"]
    except Exception:
        # skip any files that aren't valid CVE records
        continue
# prepare a ReplaceOne upsert
    ops.append(
        ReplaceOne(
            {"cveMetadata.cveId": cve_id},
            rec,
            upsert=True
        )
    )
    count += 1
# flush once we hit a full batch
    if len(ops) >= BATCH_SIZE:
        coll.bulk_write(ops, ordered=False)
        ops.clear()
        print(f"{count:,} CVEs processed…", flush=True)

# flush any leftovers
if ops:
    coll.bulk_write(ops, ordered=False)
    print(f"{count:,} CVEs processed (final batch)…", flush=True)

print(f"[ import_cvelistv5 ] {count:,} records upserted into {DB_NAME}.{COLL_NAME}")
