#!/bin/bash
# cve_backfill.sh — import every yearly NVD JSON feed, then run community-list updater
# with single-process lock, gzip support, mkdir /data, and unified db_updater call

LOCKFILE="/tmp/cve_backfill.lock"
if [ -e "$LOCKFILE" ]; then
  echo "[ERROR] Lockfile exists. Another backfill is running or crashed."
  echo "        Remove $LOCKFILE if you're sure it's stale, then retry."
  exit 1
fi
touch "$LOCKFILE"
trap "rm -f '$LOCKFILE'" EXIT

set -euo pipefail

# — Adjust these to match your container names —
MONGO_CONTAINER="cve-searchdockerversion-mongo-1"
API_CONTAINER="cve-searchdockerversion-cve_search-1"

DB="cve-search"
COLL="fkie_nvd"

START_YEAR=1999
END_YEAR=$(date +%Y)

WORKDIR="./nvd_json"
mkdir -p "$WORKDIR"

echo "[INFO] Beginning yearly NVD JSON backfill: $START_YEAR → $END_YEAR"

for YEAR in $(seq $START_YEAR $END_YEAR); do
  FILENAME="nvdcve-1.1-${YEAR}.json.gz"
  URL="https://nvd.nist.gov/feeds/json/cve/1.1/${FILENAME}"
  LOCAL_PATH="$WORKDIR/$FILENAME"

  echo "[RUN] Downloading $YEAR feed..."
  curl -sSL "$URL" -o "$LOCAL_PATH"

  echo "[RUN] Ensuring /data exists in Mongo container..."
  docker exec "$MONGO_CONTAINER" mkdir -p /data

  echo "[RUN] Copying $YEAR feed into Mongo container..."
  docker cp "$LOCAL_PATH" "$MONGO_CONTAINER":/data/

  echo "[RUN] Importing $YEAR into MongoDB..."
  docker exec "$MONGO_CONTAINER" bash -c "\
    # Ensure unique index on CVE ID \
    mongosh --quiet --eval \"db.getSiblingDB('${DB}').${COLL}.createIndex({'cve.CVE_data_meta.ID':1},{unique:true})\" && \
    # Import with gzip decompression and upsert mode \
    mongoimport --gzip \
      --db ${DB} --collection ${COLL} \
      --mode upsert \
      --file /data/${FILENAME}"
  echo "[OK] Year $YEAR imported."
done

echo "[INFO] Cleaning up local JSON files..."
rm -rf "$WORKDIR"

echo "[INFO] Pulling community enrichment feeds"
docker exec "$API_CONTAINER" python3 /app/sbin/db_updater.py -s cwe capec via4 epss -f

echo "[DONE] Full backfill complete"
