{
  "Comment": "A description of my state machine",
  "StartAt": "Invoke Vendor Lambda",
  "States": {
    "Invoke Vendor Lambda": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Output": "{% $states.result.Payload %}",
      "Arguments": {
        "FunctionName": "arn:aws:lambda:us-east-2:692859941232:function:cve_ingestion_vendor_lambda:$LATEST",
        "Payload": "{% $states.input %}"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 3,
          "BackoffRate": 2,
          "JitterStrategy": "FULL"
        }
      ],
      "Next": "Initial Wait",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Comment": "Vendor Lambda Failed",
          "Next": "Vendor Lambda Failed"
        }
      ]
    },
    "Vendor Lambda Failed": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::sns:publish.waitForTaskToken",
      "Arguments": {
        "TopicArn": "arn:aws:sns:us-east-2:692859941232:cve_sns_topic",
        "Message": "Vendor Lambda Failed. Resume the pipeline after fixing: https://8icj443bt1.execute-api.us-east-2.amazonaws.com/prod/resume?taskToken={{Task.Token}}"
      },
      "Next": "Invoke Vendor Lambda"
    },
    "Initial Wait": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "Vendor SQS Poll"
    },
    "Vendor SQS Poll": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Arguments": {
        "QueueUrl": "https://sqs.us-east-2.amazonaws.com/692859941232/cve_ingestion_vendor_sqs",
        "AttributeNames": [
          "ApproximateNumberOfMessages",
          "ApproximateNumberOfMessagesNotVisible"
        ]
      },
      "Resource": "arn:aws:states:::aws-sdk:sqs:getQueueAttributes",
      "Next": "Vendor Queue Check"
    },
    "Vendor Queue Check": {
      "Type": "Choice",
      "QueryLanguage": "JSONata",
      "Choices": [
        {
          "Next": "Vendor DLQ Poll",
          "Condition": "{% ($states.input.Attributes.ApproximateNumberOfMessages ~> $number = 0 and $states.input.Attributes.ApproximateNumberOfMessagesNotVisible ~> $number = 0) %}"
        }
      ],
      "Default": "Wait for Vendors"
    },
    "Vendor DLQ Poll": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Arguments": {
        "QueueUrl": "https://sqs.us-east-2.amazonaws.com/692859941232/cve_ingestion_vendor_sqs_dlq",
        "AttributeNames": [
          "ApproximateNumberOfMessages",
          "ApproximateNumberOfMessagesNotVisible"
        ]
      },
      "Resource": "arn:aws:states:::aws-sdk:sqs:getQueueAttributes",
      "Next": "Vendor DLQ Check"
    },
    "Vendor DLQ Check": {
      "Type": "Choice",
      "QueryLanguage": "JSONata",
      "Choices": [
        {
          "Next": "Product SQS Poll",
          "Condition": "{% ($states.input.Attributes.ApproximateNumberOfMessages ~> $number = 0 and $states.input.Attributes.ApproximateNumberOfMessagesNotVisible ~> $number = 0) %}"
        }
      ],
      "Default": "Vendors Not Processed"
    },
    "Product SQS Poll": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Arguments": {
        "QueueUrl": "https://sqs.us-east-2.amazonaws.com/692859941232/cve_ingestion_vendor_product_sqs",
        "AttributeNames": [
          "ApproximateNumberOfMessages",
          "ApproximateNumberOfMessagesNotVisible"
        ]
      },
      "Resource": "arn:aws:states:::aws-sdk:sqs:getQueueAttributes",
      "Next": "Product Queue Check"
    },
    "Product Queue Check": {
      "Type": "Choice",
      "QueryLanguage": "JSONata",
      "Choices": [
        {
          "Next": "Product DLQ Poll",
          "Condition": "{% ($states.input.Attributes.ApproximateNumberOfMessages ~> $number = 0 and $states.input.Attributes.ApproximateNumberOfMessagesNotVisible ~> $number = 0) %}"
        }
      ],
      "Default": "Wait for Products"
    },
    "Product DLQ Poll": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Arguments": {
        "QueueUrl": "https://sqs.us-east-2.amazonaws.com/692859941232/cve_ingestion_vendor_product_sqs_dlq",
        "AttributeNames": [
          "ApproximateNumberOfMessages",
          "ApproximateNumberOfMessagesNotVisible"
        ]
      },
      "Resource": "arn:aws:states:::aws-sdk:sqs:getQueueAttributes",
      "Next": "Product DLQ Check"
    },
    "Product DLQ Check": {
      "Type": "Choice",
      "QueryLanguage": "JSONata",
      "Choices": [
        {
          "Next": "Ingestion Lambda Status",
          "Condition": "{% ($states.input.Attributes.ApproximateNumberOfMessages ~> $number = 0 and $states.input.Attributes.ApproximateNumberOfMessagesNotVisible ~> $number = 0) %}"
        }
      ],
      "Default": "Products Not Processed"
    },
    "Ingestion Lambda Status": {
      "Type": "Task",
      "QueryLanguage": "JSONPath",
      "Resource": "arn:aws:states:::aws-sdk:cloudwatch:getMetricStatistics",
      "Parameters": {
        "Namespace": "AWS/Lambda",
        "MetricName": "ConcurrentExecutions",
        "Dimensions": [
          {
            "Name": "FunctionName",
            "Value": "cve_ingestion_firehose_lambda"
          }
        ],
        "StartTime.$": "States.FormatTimestamp(States.MathSubtract(States.TimeNow('unix'), 60), \"yyyy-MM-dd'T'HH:mm:ss'Z'\")",
        "EndTime.$": "States.FormatTimestamp(States.TimeNow('unix'), \"yyyy-MM-dd'T'HH:mm:ss'Z'\")",
        "Period": 60,
        "Statistics": [
          "Maximum"
        ]
      },
      "ResultPath": "$.CloudWatchOutput",
      "Next": "Ingestion Lambda Check"
    },
    "Ingestion Lambda Check": {
      "Type": "Choice",
      "QueryLanguage": "JSONata",
      "Choices": [
        {
          "Next": "Wait for Firehose",
          "Condition": "{% ($states.input.CloudWatchOutput.Datapoints[0].Maximum ~> $number = 0) %}"
        }
      ],
      "Default": "Wait for Ingestion"
    },
    "Wait for Ingestion": {
      "Type": "Wait",
      "Seconds": 10,
      "Next": "Ingestion Lambda Status"
    },
    "Wait for Firehose": {
      "Type": "Wait",
      "Seconds": 910,
      "Next": "Staging Glue Run"
    },
    "Staging Glue Run": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Arguments": {
        "JobName": "cve_staging_glue"
      },
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Comment": "Staging Run Failed",
          "Next": "Staging Glue Run Failed"
        }
      ],
      "Next": "Staging DQ Glue Run"
    },
    "Staging DQ Glue Run": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Arguments": {
        "JobName": "cve_staging_glue_dq"
      },
      "Next": "Production Glue Run",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Comment": "Staging DQ Glue Run Failed",
          "Next": "Staging DQ Glue Run Failed"
        }
      ]
    },
    "Production Glue Run": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Arguments": {
        "JobName": "cve_production_glue"
      },
      "Next": "Materialized View Glue Run",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Comment": "Production Glue Run Failed",
          "Next": "Production Glue Run Failed"
        }
      ]
    },
    "Materialized View Glue Run": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::glue:startJobRun.sync",
      "Arguments": {
        "JobName": "cve_production_materialized_views_glue"
      },
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "Comment": "Materialized View Glue Run Failed",
          "Next": "Materialized View Glue Run Failed"
        }
      ],
      "End": true
    },
    "Materialized View Glue Run Failed": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::sns:publish.waitForTaskToken",
      "Arguments": {
        "Message": "{% $states.input %}",
        "TopicArn": "arn:aws:sns:us-east-2:692859941232:cve_sns_topic"
      },
      "Next": "Materialized View Glue Run"
    },
    "Production Glue Run Failed": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::sns:publish.waitForTaskToken",
      "Arguments": {
        "TopicArn": "arn:aws:sns:us-east-2:692859941232:cve_sns_topic",
        "Message": "{% $states.input %}"
      },
      "Next": "Production Glue Run"
    },
    "Staging DQ Glue Run Failed": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::sns:publish.waitForTaskToken",
      "Arguments": {
        "Message": "{% $states.input %}",
        "TopicArn": "arn:aws:sns:us-east-2:692859941232:cve_sns_topic"
      },
      "Next": "Staging DQ Glue Run"
    },
    "Staging Glue Run Failed": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::sns:publish.waitForTaskToken",
      "Arguments": {
        "Message": "{% $states.input %}",
        "TopicArn": "arn:aws:sns:us-east-2:692859941232:cve_sns_topic"
      },
      "Next": "Staging Glue Run"
    },
    "Products Not Processed": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::sns:publish.waitForTaskToken",
      "Arguments": {
        "TopicArn": "arn:aws:sns:us-east-2:692859941232:cve_sns_topic",
        "Message": "Product DLQ is not empty. Resume the pipeline after redrive: https://8icj443bt1.execute-api.us-east-2.amazonaws.com/prod/resume?taskToken={{Task.Token}}"
      },
      "Next": "Ingestion Lambda Status"
    },
    "Wait for Products": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "Product SQS Poll"
    },
    "Vendors Not Processed": {
      "Type": "Task",
      "QueryLanguage": "JSONata",
      "Resource": "arn:aws:states:::sns:publish.waitForTaskToken",
      "Arguments": {
        "TopicArn": "arn:aws:sns:us-east-2:692859941232:cve_sns_topic",
        "Message": "Vendor DLQ is not empty. Resume the pipeline after redrive: https://8icj443bt1.execute-api.us-east-2.amazonaws.com/prod/resume?taskToken={{Task.Token}}"
      },
      "Next": "Product SQS Poll"
    },
    "Wait for Vendors": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "Vendor SQS Poll"
    }
  }
}