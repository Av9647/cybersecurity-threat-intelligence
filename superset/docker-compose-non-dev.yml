version: "3.7"

# -----------------------------------------------------------------------
# Adapted for quick spin-up using pre-built Superset image and Redis for:
# 1) Rate limiting  2) Results caching  3) Celery broker & result backend
# -----------------------------------------------------------------------

x-superset-volumes:
  &superset-volumes
  # mounts ./docker into /app/docker (on PYTHONPATH) and a superset_home volume
  - ./docker:/app/docker
  - superset_home:/app/superset_home

services:
  redis:
    image: redis:7-alpine
    container_name: superset_cache
    restart: unless-stopped
    volumes:
      - redis:/data

  db:
    env_file:
      - docker/.env
      - docker/.env-local
    image: postgres:16-alpine
    container_name: superset_db
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data
      - ./docker/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  superset:
    image: apache/superset:latest
    container_name: superset_app
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    env_file:
      - docker/.env
      - docker/.env-local
    restart: unless-stopped
    ports:
      - "8088:8088"
    depends_on:
      - db
      - redis
      - superset-init
    volumes: *superset-volumes
    environment:
      SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

  superset-init:
    image: apache/superset:latest
    container_name: superset_init
    command: ["/app/docker/docker-init.sh"]
    env_file:
      - docker/.env
      - docker/.env-local
    depends_on:
      - db
      - redis
    restart: "no"
    volumes: *superset-volumes
    healthcheck:
      disable: true
    environment:
      SUPERSET_LOAD_EXAMPLES: "${SUPERSET_LOAD_EXAMPLES:-no}"
      SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

  superset-worker:
    image: apache/superset:latest
    container_name: superset_worker
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    env_file:
      - docker/.env
      - docker/.env-local
    restart: unless-stopped
    depends_on:
      - superset-init
    volumes: *superset-volumes
    healthcheck:
      test: [
        "CMD-SHELL",
        "celery -A superset.tasks.celery_app:app inspect ping -d celery@$$HOSTNAME",
      ]
    environment:
      SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

  superset-worker-beat:
    image: apache/superset:latest
    container_name: superset_worker_beat
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    env_file:
      - docker/.env
      - docker/.env-local
    restart: unless-stopped
    depends_on:
      - superset-init
    volumes: *superset-volumes
    healthcheck:
      disable: true
    environment:
      SUPERSET_LOG_LEVEL: "${SUPERSET_LOG_LEVEL:-info}"

volumes:
  superset_home:
  db_home:
  redis:

# End of file
